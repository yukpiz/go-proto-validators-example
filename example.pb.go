// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExampleMessage struct {
	HelloId              int64    `protobuf:"varint,1,opt,name=hello_id,json=helloId,proto3" json:"hello_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleMessage) Reset()         { *m = ExampleMessage{} }
func (m *ExampleMessage) String() string { return proto.CompactTextString(m) }
func (*ExampleMessage) ProtoMessage()    {}
func (*ExampleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *ExampleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleMessage.Unmarshal(m, b)
}
func (m *ExampleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleMessage.Marshal(b, m, deterministic)
}
func (m *ExampleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleMessage.Merge(m, src)
}
func (m *ExampleMessage) XXX_Size() int {
	return xxx_messageInfo_ExampleMessage.Size(m)
}
func (m *ExampleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleMessage proto.InternalMessageInfo

func (m *ExampleMessage) GetHelloId() int64 {
	if m != nil {
		return m.HelloId
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ExampleMessage)(nil), "ExampleMessage")
	proto.RegisterType((*Empty)(nil), "Empty")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0x32, 0x4b, 0xcf, 0x2c, 0xc9, 0x28,
	0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x2d, 0xcf, 0x2c, 0xc9, 0xce, 0x2f, 0xd7, 0x4f, 0xcf,
	0xd7, 0x05, 0x4b, 0xea, 0x96, 0x25, 0xe6, 0x64, 0xa6, 0x24, 0x96, 0xe4, 0x17, 0x15, 0xeb, 0xc3,
	0x99, 0x10, 0x7d, 0x4a, 0xc6, 0x5c, 0x7c, 0xae, 0x10, 0x83, 0x7c, 0x53, 0x8b, 0x8b, 0x13, 0xd3,
	0x53, 0x85, 0x14, 0xb9, 0x38, 0x32, 0x52, 0x73, 0x72, 0xf2, 0xe3, 0x33, 0x53, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x98, 0x9d, 0xd8, 0x1e, 0xdd, 0x97, 0x67, 0x12, 0x60, 0x08, 0x62, 0x07, 0x8b, 0x7b,
	0xa6, 0x28, 0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x1a, 0xe9, 0x71, 0x71, 0x41, 0x75,
	0x3b, 0x06, 0x78, 0x0a, 0x29, 0x70, 0xb1, 0x7a, 0x80, 0x54, 0x08, 0xf1, 0xeb, 0xa1, 0x9a, 0x29,
	0xc5, 0xa6, 0x07, 0x56, 0x9f, 0xc4, 0x06, 0xb6, 0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x75,
	0x51, 0x1c, 0x08, 0xbd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleAPIClient is the client API for ExampleAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleAPIClient interface {
	Hello(ctx context.Context, in *ExampleMessage, opts ...grpc.CallOption) (*Empty, error)
}

type exampleAPIClient struct {
	cc *grpc.ClientConn
}

func NewExampleAPIClient(cc *grpc.ClientConn) ExampleAPIClient {
	return &exampleAPIClient{cc}
}

func (c *exampleAPIClient) Hello(ctx context.Context, in *ExampleMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ExampleAPI/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleAPIServer is the server API for ExampleAPI service.
type ExampleAPIServer interface {
	Hello(context.Context, *ExampleMessage) (*Empty, error)
}

// UnimplementedExampleAPIServer can be embedded to have forward compatible implementations.
type UnimplementedExampleAPIServer struct {
}

func (*UnimplementedExampleAPIServer) Hello(ctx context.Context, req *ExampleMessage) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterExampleAPIServer(s *grpc.Server, srv ExampleAPIServer) {
	s.RegisterService(&_ExampleAPI_serviceDesc, srv)
}

func _ExampleAPI_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleAPIServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExampleAPI/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleAPIServer).Hello(ctx, req.(*ExampleMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExampleAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ExampleAPI",
	HandlerType: (*ExampleAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _ExampleAPI_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}
